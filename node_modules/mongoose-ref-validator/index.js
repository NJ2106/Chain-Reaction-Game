var mongoose = require('mongoose');

module.exports = exports = function validateRefs (schema, options) {
  schema.eachPath(function (path, schemaType) {
    if (schemaType.schema) {
      validateRefs(schemaType.schema, options);
      return;
    }

    var obj = schema.obj[path];

    if (obj && obj.ref && obj.conditions) {
      schema.pre('save', function (next) {
        if (!this.isModified(path)) {
          next();
          return;
        }

        var conditions = schema.obj[path].conditions;
        if (typeof(conditions) === 'function') {
          schema.obj[path].computedConditions = conditions.call(this);
        }

        next();
      });

      schema.path(path).validate({
        isAsync: true,
        message: 'Path `{PATH}` references document which does not exist ({VALUE}).',
        validator: function (v, cb) {
          if (!schema.obj[path].required && !v) {
            cb(true);
            return;
          }

          var conditions = schema.obj[path].computedConditions || schema.obj[path].conditions;

          if (!conditions) {
            cb(true);
            return;
          }

          conditions = Object.assign({}, conditions);
          conditions['_id'] = v;
          
          mongoose.model(obj.ref).count(conditions, function (err, count) {
            cb(!err && count);
          });
        }
      });
    }
  });
};
